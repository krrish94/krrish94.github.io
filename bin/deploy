#!/usr/bin/env bash

# Run this script to deploy the app to Github Pages

# Parse cmd arguments

SRC_BRANCH="src"
DEPLOY_BRANCH="master"

# Exit if any subcommand fails
set -e

echo "Deploying..."
echo "Source branch: $SRC_BRANCH"
echo "Deploy branch: $DEPLOY_BRANCH"

read -r -p "Do you want to proceed? [y/N] " response
if [[ ! $response =~ ^([yY][eE][sS]|[yY])+$ ]]
then
    echo "Aborting."
    [[ "$0" = "$BASH_SOURCE" ]] && exit 1 || return 1
fi

# Check if there are any uncommitted changes
if ! git diff-index --quiet HEAD --; then
    echo "Changes to the following files are uncommitted:"
    git diff-index --name-only HEAD --
    echo "Please commit the changes before proceeding."
    echo "Aborting."
    [[ "$0" = "$BASH_SOURCE" ]] && exit 1 || return 1
fi

# Switch to source branch (creates it if necessary from the current branch)
if [ `git branch | grep $SRC_BRANCH | tr ' ' '\n' | tail -1` ]
then
    git checkout $SRC_BRANCH
else
    git checkout -b $SRC_BRANCH
fi

# Checkout DEPLOY_BRANCH branch
if [ `git branch | grep $DEPLOY_BRANCH` ]
then
  git branch -D $DEPLOY_BRANCH
fi
git checkout -b $DEPLOY_BRANCH

# Build site
hugo

# Delete and move files
find . -maxdepth 1 ! -name 'assets' ! -name 'bin' ! -name 'config' ! -name 'config.toml' ! -name 'content' ! -name 'data' ! -name 'LICENSE.md' ! -name 'netlify.toml' ! -name 'README.md' ! -name 'scripts' ! -name 'static' ! -name 'themes' ! -name 'update_academic.sh' ! -name 'view.sh' ! -update '.editorconfig' ! -name '.forestry' ! -name '.git' ! -name '.github' ! -name '.gitignore' -exec rm -rf {} \;
mv public/* .
rm -R public/

# Push to DEPLOY_BRANCH
git add -fA
git commit --allow-empty -m "$(git log -1 --pretty=%B)"
git push -f -q origin $DEPLOY_BRANCH

# Move back to SRC_BRANCH
git checkout $SRC_BRANCH

echo "Deployed successfully!"

exit 0
